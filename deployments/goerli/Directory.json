{
  "address": "0x2a4a3494e1f8D8fD3eEf2b53c6105F2bB0C07322",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "ContractDescriptionSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum IDirectory.ContractType",
          "name": "contractType",
          "type": "uint8"
        }
      ],
      "name": "ContractRecordAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "ProposalDescriptionSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "ProposalRecordAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "service",
          "type": "address"
        }
      ],
      "name": "ServiceSet",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "enum IDirectory.ContractType",
          "name": "contractType",
          "type": "uint8"
        }
      ],
      "name": "addContractRecord",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "addProposalRecord",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "contractRecordAt",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "enum IDirectory.ContractType",
          "name": "contractType",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "indexOfContract",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastContractRecordIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastProposalRecordIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalRecordAt",
      "outputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "setContractDescription",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "setProposalDescription",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "service_",
          "type": "address"
        }
      ],
      "name": "setService",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "typeOf",
      "outputs": [
        {
          "internalType": "enum IDirectory.ContractType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xdbe6beaa88e9a256dab93c72bf8c4520ce35961980bd380a3b48dc88d01aa5c5",
  "receipt": {
    "to": null,
    "from": "0x90A4a90e6FAf88c4d709F666D26793F9e2B47183",
    "contractAddress": "0x2a4a3494e1f8D8fD3eEf2b53c6105F2bB0C07322",
    "transactionIndex": 6,
    "gasUsed": "782784",
    "logsBloom": "0x
    "blockHash": "0x2a97333ae5b4f08222e6c6870a399dfa620423852d113bfd577e89ad8340a740",
    "transactionHash": "0xdbe6beaa88e9a256dab93c72bf8c4520ce35961980bd380a3b48dc88d01aa5c5",
    "logs": [
      {
        "transactionIndex": 6,
        "blockNumber": 7123826,
        "transactionHash": "0xdbe6beaa88e9a256dab93c72bf8c4520ce35961980bd380a3b48dc88d01aa5c5",
        "address": "0x2a4a3494e1f8D8fD3eEf2b53c6105F2bB0C07322",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000090a4a90e6faf88c4d709f666d26793f9e2b47183"
        ],
        "data": "0x",
        "logIndex": 9,
        "blockHash": "0x2a97333ae5b4f08222e6c6870a399dfa620423852d113bfd577e89ad8340a740"
      }
    ],
    "blockNumber": 7123826,
    "cumulativeGasUsed": "6798275",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "39f96f7bb5a095faa550612a86705d4a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ContractDescriptionSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IDirectory.ContractType\",\"name\":\"contractType\",\"type\":\"uint8\"}],\"name\":\"ContractRecordAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalDescriptionSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalRecordAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"service\",\"type\":\"address\"}],\"name\":\"ServiceSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum IDirectory.ContractType\",\"name\":\"contractType\",\"type\":\"uint8\"}],\"name\":\"addContractRecord\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"addProposalRecord\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"contractRecordAt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum IDirectory.ContractType\",\"name\":\"contractType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"indexOfContract\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastContractRecordIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastProposalRecordIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalRecordAt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"setContractDescription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"setProposalDescription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"service_\",\"type\":\"address\"}],\"name\":\"setService\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"typeOf\",\"outputs\":[{\"internalType\":\"enum IDirectory.ContractType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Directory.sol\":\"Directory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Directory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.13;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./interfaces/IDirectory.sol\\\";\\n\\ncontract Directory is IDirectory, Ownable {\\n    address service;\\n\\n    struct ContractInfo {\\n        address addr;\\n        ContractType contractType;\\n        string description;\\n    }\\n\\n    mapping(uint256 => ContractInfo) public contractRecordAt;\\n\\n    uint256 public lastContractRecordIndex;\\n\\n    mapping(address => uint256) public indexOfContract;\\n\\n    struct ProposalInfo {\\n        address pool;\\n        uint256 proposalId;\\n        string description;\\n    }\\n\\n    mapping(uint256 => ProposalInfo) public proposalRecordAt;\\n\\n    uint256 public lastProposalRecordIndex;\\n\\n    // EVENTS\\n\\n    event ContractRecordAdded(\\n        uint256 index,\\n        address addr,\\n        ContractType contractType\\n    );\\n\\n    event ProposalRecordAdded(uint256 index, address pool, uint256 proposalId);\\n\\n    event ServiceSet(address service);\\n\\n    event ContractDescriptionSet(uint256 index, string description);\\n\\n    event ProposalDescriptionSet(uint256 index, string description);\\n\\n    // PUBLIC FUNCTIONS\\n\\n    function addContractRecord(address addr, ContractType contractType)\\n        external\\n        override\\n        onlyService\\n        returns (uint256 index)\\n    {\\n        index = ++lastContractRecordIndex;\\n        contractRecordAt[index] = ContractInfo({\\n            addr: addr,\\n            contractType: contractType,\\n            description: \\\"\\\"\\n        });\\n        indexOfContract[addr] = index;\\n\\n        emit ContractRecordAdded(index, addr, contractType);\\n    }\\n\\n    function addProposalRecord(address pool, uint256 proposalId)\\n        external\\n        override\\n        onlyService\\n        returns (uint256 index)\\n    {\\n        index = ++lastProposalRecordIndex;\\n        proposalRecordAt[index] = ProposalInfo({\\n            pool: pool,\\n            proposalId: proposalId,\\n            description: \\\"\\\"\\n        });\\n\\n        emit ProposalRecordAdded(index, pool, proposalId);\\n    }\\n\\n    function setService(address service_) external onlyOwner {\\n        service = service_;\\n        emit ServiceSet(service_);\\n    }\\n\\n    function setContractDescription(uint256 index, string memory description)\\n        external\\n        onlyOwner\\n    {\\n        contractRecordAt[index].description = description;\\n        emit ContractDescriptionSet(index, description);\\n    }\\n\\n    function setProposalDescription(uint256 index, string memory description)\\n        external\\n        onlyOwner\\n    {\\n        proposalRecordAt[index].description = description;\\n        emit ProposalDescriptionSet(index, description);\\n    }\\n\\n    // PUBLIC VIEW FUNCTIONS\\n\\n    function typeOf(address addr)\\n        external\\n        view\\n        override\\n        returns (ContractType)\\n    {\\n        return contractRecordAt[indexOfContract[addr]].contractType;\\n    }\\n\\n    // MODIFIERS\\n\\n    modifier onlyService() {\\n        require(msg.sender == service, \\\"Not service\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x67d087df06c7ba4465a3e07e1b7579cd2d99c01c6ca46df8e5ab1e56a64c24d4\",\"license\":\"MIT\"},\"contracts/interfaces/IDirectory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.13;\\n\\ninterface IDirectory {\\n    enum ContractType {\\n        None,\\n        Pool,\\n        GovernanceToken,\\n        TGE\\n    }\\n\\n    function addContractRecord(address addr, ContractType contractType)\\n        external\\n        returns (uint256 index);\\n\\n    function addProposalRecord(address pool, uint256 proposalId)\\n        external\\n        returns (uint256 index);\\n\\n    function typeOf(address addr) external view returns (ContractType);\\n}\\n\",\"keccak256\":\"0x39fc90b444e9aefc4e2a3a40b43840dfa44ff13441a9e50d3de9bb95f044bd81\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610cbd8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063867c5ce41161008c578063bf8bdac111610066578063bf8bdac114610201578063e863325c14610214578063f2fde38b14610236578063f4be93691461024957600080fd5b8063867c5ce4146101bb5780638da5cb5b146101c45780638f78131d146101df57600080fd5b80634dcbe29c116100c85780634dcbe29c1461014a5780636dcb0cf814610153578063715018a6146101a0578063740b2e82146101a857600080fd5b80630c80f364146100ef578063121f661c146101155780633cf6f97e14610135575b600080fd5b6101026100fd366004610944565b61025c565b6040519081526020015b60405180910390f35b61010261012336600461097f565b60046020526000908152604090205481565b6101486101433660046109b7565b6103d9565b005b61010260065481565b61019361016136600461097f565b6001600160a01b031660009081526004602090815260408083205483526002909152902054600160a01b900460ff1690565b60405161010c9190610aaa565b610148610466565b6101486101b63660046109b7565b61049c565b61010260035481565b6000546040516001600160a01b03909116815260200161010c565b6101f26101ed366004610abe565b61051d565b60405161010c93929190610b24565b61014861020f36600461097f565b6105d2565b610227610222366004610abe565b610650565b60405161010c93929190610b54565b61014861024436600461097f565b610688565b610102610257366004610b83565b610723565b6001546000906001600160a01b031633146102ac5760405162461bcd60e51b815260206004820152600b60248201526a4e6f74207365727669636560a81b60448201526064015b60405180910390fd5b6003600081546102bb90610bad565b91905081905590506040518060600160405280846001600160a01b031681526020018360038111156102ef576102ef610a72565b81526040805160208181018352600080835293810191909152848352600281529120825181546001600160a01b039091166001600160a01b031982168117835592840151919283916001600160a81b03191617600160a01b83600381111561035957610359610a72565b02179055506040820151805161037991600184019160209091019061088f565b5050506001600160a01b03831660009081526004602052604090819020829055517f30ae76c641f7b77628da0dd91b34591e5b1dc7422220e5eb1080af2adfa142ef906103cb90839086908690610bd4565b60405180910390a192915050565b6000546001600160a01b031633146104035760405162461bcd60e51b81526004016102a390610bff565b600082815260056020908152604090912082516104289260029092019184019061088f565b507fd4b52f51f8409bb81cfc40bc8589bda5074506c1be73813a83f4920ee7c1760c828260405161045a929190610c34565b60405180910390a15050565b6000546001600160a01b031633146104905760405162461bcd60e51b81526004016102a390610bff565b61049a600061083f565b565b6000546001600160a01b031633146104c65760405162461bcd60e51b81526004016102a390610bff565b600082815260026020908152604090912082516104eb9260019092019184019061088f565b507f69e93226f950dc1ac48f9d4ce72d39b74e7dca96d8083af3fa382ca2c9f5b7b8828260405161045a929190610c34565b6005602052600090815260409020805460018201546002830180546001600160a01b0390931693919261054f90610c4d565b80601f016020809104026020016040519081016040528092919081815260200182805461057b90610c4d565b80156105c85780601f1061059d576101008083540402835291602001916105c8565b820191906000526020600020905b8154815290600101906020018083116105ab57829003601f168201915b5050505050905083565b6000546001600160a01b031633146105fc5760405162461bcd60e51b81526004016102a390610bff565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527fba4ef9f2abdeba1a78e372c28a47041ab716052e293845701bc5465fc4e7cf619060200160405180910390a150565b600260205260009081526040902080546001820180546001600160a01b03831693600160a01b90930460ff1692919061054f90610c4d565b6000546001600160a01b031633146106b25760405162461bcd60e51b81526004016102a390610bff565b6001600160a01b0381166107175760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102a3565b6107208161083f565b50565b6001546000906001600160a01b0316331461076e5760405162461bcd60e51b815260206004820152600b60248201526a4e6f74207365727669636560a81b60448201526064016102a3565b60066000815461077d90610bad565b9182905550604080516060810182526001600160a01b03868116825260208083018781528451808301865260008082528587019182528781526005845295909520845181546001600160a01b031916941693909317835551600183015592518051949550919390926107f692600285019291019061088f565b5050604080518381526001600160a01b03861660208201529081018490527f275b6fbf6c9e793a28d01c614ff750fb316acacb6c25f06fdb8ac72d9dbabb0891506060016103cb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805461089b90610c4d565b90600052602060002090601f0160209004810192826108bd5760008555610903565b82601f106108d657805160ff1916838001178555610903565b82800160010185558215610903579182015b828111156109035782518255916020019190600101906108e8565b5061090f929150610913565b5090565b5b8082111561090f5760008155600101610914565b80356001600160a01b038116811461093f57600080fd5b919050565b6000806040838503121561095757600080fd5b61096083610928565b915060208301356004811061097457600080fd5b809150509250929050565b60006020828403121561099157600080fd5b61099a82610928565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156109ca57600080fd5b82359150602083013567ffffffffffffffff808211156109e957600080fd5b818501915085601f8301126109fd57600080fd5b813581811115610a0f57610a0f6109a1565b604051601f8201601f19908116603f01168101908382118183101715610a3757610a376109a1565b81604052828152886020848701011115610a5057600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b634e487b7160e01b600052602160045260246000fd5b60048110610aa657634e487b7160e01b600052602160045260246000fd5b9052565b60208101610ab88284610a88565b92915050565b600060208284031215610ad057600080fd5b5035919050565b6000815180845260005b81811015610afd57602081850181015186830182015201610ae1565b81811115610b0f576000602083870101525b50601f01601f19169290920160200192915050565b60018060a01b0384168152826020820152606060408201526000610b4b6060830184610ad7565b95945050505050565b6001600160a01b0384168152610b6d6020820184610a88565b606060408201526000610b4b6060830184610ad7565b60008060408385031215610b9657600080fd5b610b9f83610928565b946020939093013593505050565b600060018201610bcd57634e487b7160e01b600052601160045260246000fd5b5060010190565b8381526001600160a01b038316602082015260608101610bf76040830184610a88565b949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b828152604060208201526000610bf76040830184610ad7565b600181811c90821680610c6157607f821691505b602082108103610c8157634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220b1353560c844a6be12a3fc1a571a7b5aa72107c126a78ea44c9bacff16cbe59664736f6c634300080d0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063867c5ce41161008c578063bf8bdac111610066578063bf8bdac114610201578063e863325c14610214578063f2fde38b14610236578063f4be93691461024957600080fd5b8063867c5ce4146101bb5780638da5cb5b146101c45780638f78131d146101df57600080fd5b80634dcbe29c116100c85780634dcbe29c1461014a5780636dcb0cf814610153578063715018a6146101a0578063740b2e82146101a857600080fd5b80630c80f364146100ef578063121f661c146101155780633cf6f97e14610135575b600080fd5b6101026100fd366004610944565b61025c565b6040519081526020015b60405180910390f35b61010261012336600461097f565b60046020526000908152604090205481565b6101486101433660046109b7565b6103d9565b005b61010260065481565b61019361016136600461097f565b6001600160a01b031660009081526004602090815260408083205483526002909152902054600160a01b900460ff1690565b60405161010c9190610aaa565b610148610466565b6101486101b63660046109b7565b61049c565b61010260035481565b6000546040516001600160a01b03909116815260200161010c565b6101f26101ed366004610abe565b61051d565b60405161010c93929190610b24565b61014861020f36600461097f565b6105d2565b610227610222366004610abe565b610650565b60405161010c93929190610b54565b61014861024436600461097f565b610688565b610102610257366004610b83565b610723565b6001546000906001600160a01b031633146102ac5760405162461bcd60e51b815260206004820152600b60248201526a4e6f74207365727669636560a81b60448201526064015b60405180910390fd5b6003600081546102bb90610bad565b91905081905590506040518060600160405280846001600160a01b031681526020018360038111156102ef576102ef610a72565b81526040805160208181018352600080835293810191909152848352600281529120825181546001600160a01b039091166001600160a01b031982168117835592840151919283916001600160a81b03191617600160a01b83600381111561035957610359610a72565b02179055506040820151805161037991600184019160209091019061088f565b5050506001600160a01b03831660009081526004602052604090819020829055517f30ae76c641f7b77628da0dd91b34591e5b1dc7422220e5eb1080af2adfa142ef906103cb90839086908690610bd4565b60405180910390a192915050565b6000546001600160a01b031633146104035760405162461bcd60e51b81526004016102a390610bff565b600082815260056020908152604090912082516104289260029092019184019061088f565b507fd4b52f51f8409bb81cfc40bc8589bda5074506c1be73813a83f4920ee7c1760c828260405161045a929190610c34565b60405180910390a15050565b6000546001600160a01b031633146104905760405162461bcd60e51b81526004016102a390610bff565b61049a600061083f565b565b6000546001600160a01b031633146104c65760405162461bcd60e51b81526004016102a390610bff565b600082815260026020908152604090912082516104eb9260019092019184019061088f565b507f69e93226f950dc1ac48f9d4ce72d39b74e7dca96d8083af3fa382ca2c9f5b7b8828260405161045a929190610c34565b6005602052600090815260409020805460018201546002830180546001600160a01b0390931693919261054f90610c4d565b80601f016020809104026020016040519081016040528092919081815260200182805461057b90610c4d565b80156105c85780601f1061059d576101008083540402835291602001916105c8565b820191906000526020600020905b8154815290600101906020018083116105ab57829003601f168201915b5050505050905083565b6000546001600160a01b031633146105fc5760405162461bcd60e51b81526004016102a390610bff565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527fba4ef9f2abdeba1a78e372c28a47041ab716052e293845701bc5465fc4e7cf619060200160405180910390a150565b600260205260009081526040902080546001820180546001600160a01b03831693600160a01b90930460ff1692919061054f90610c4d565b6000546001600160a01b031633146106b25760405162461bcd60e51b81526004016102a390610bff565b6001600160a01b0381166107175760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102a3565b6107208161083f565b50565b6001546000906001600160a01b0316331461076e5760405162461bcd60e51b815260206004820152600b60248201526a4e6f74207365727669636560a81b60448201526064016102a3565b60066000815461077d90610bad565b9182905550604080516060810182526001600160a01b03868116825260208083018781528451808301865260008082528587019182528781526005845295909520845181546001600160a01b031916941693909317835551600183015592518051949550919390926107f692600285019291019061088f565b5050604080518381526001600160a01b03861660208201529081018490527f275b6fbf6c9e793a28d01c614ff750fb316acacb6c25f06fdb8ac72d9dbabb0891506060016103cb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805461089b90610c4d565b90600052602060002090601f0160209004810192826108bd5760008555610903565b82601f106108d657805160ff1916838001178555610903565b82800160010185558215610903579182015b828111156109035782518255916020019190600101906108e8565b5061090f929150610913565b5090565b5b8082111561090f5760008155600101610914565b80356001600160a01b038116811461093f57600080fd5b919050565b6000806040838503121561095757600080fd5b61096083610928565b915060208301356004811061097457600080fd5b809150509250929050565b60006020828403121561099157600080fd5b61099a82610928565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156109ca57600080fd5b82359150602083013567ffffffffffffffff808211156109e957600080fd5b818501915085601f8301126109fd57600080fd5b813581811115610a0f57610a0f6109a1565b604051601f8201601f19908116603f01168101908382118183101715610a3757610a376109a1565b81604052828152886020848701011115610a5057600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b634e487b7160e01b600052602160045260246000fd5b60048110610aa657634e487b7160e01b600052602160045260246000fd5b9052565b60208101610ab88284610a88565b92915050565b600060208284031215610ad057600080fd5b5035919050565b6000815180845260005b81811015610afd57602081850181015186830182015201610ae1565b81811115610b0f576000602083870101525b50601f01601f19169290920160200192915050565b60018060a01b0384168152826020820152606060408201526000610b4b6060830184610ad7565b95945050505050565b6001600160a01b0384168152610b6d6020820184610a88565b606060408201526000610b4b6060830184610ad7565b60008060408385031215610b9657600080fd5b610b9f83610928565b946020939093013593505050565b600060018201610bcd57634e487b7160e01b600052601160045260246000fd5b5060010190565b8381526001600160a01b038316602082015260608101610bf76040830184610a88565b949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b828152604060208201526000610bf76040830184610ad7565b600181811c90821680610c6157607f821691505b602082108103610c8157634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220b1353560c844a6be12a3fc1a571a7b5aa72107c126a78ea44c9bacff16cbe59664736f6c634300080d0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3636,
        "contract": "contracts/Directory.sol:Directory",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 4444,
        "contract": "contracts/Directory.sol:Directory",
        "label": "service",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 4457,
        "contract": "contracts/Directory.sol:Directory",
        "label": "contractRecordAt",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_struct(ContractInfo)4452_storage)"
      },
      {
        "astId": 4459,
        "contract": "contracts/Directory.sol:Directory",
        "label": "lastContractRecordIndex",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 4463,
        "contract": "contracts/Directory.sol:Directory",
        "label": "indexOfContract",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 4475,
        "contract": "contracts/Directory.sol:Directory",
        "label": "proposalRecordAt",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_struct(ProposalInfo)4470_storage)"
      },
      {
        "astId": 4477,
        "contract": "contracts/Directory.sol:Directory",
        "label": "lastProposalRecordIndex",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_enum(ContractType)6912": {
        "encoding": "inplace",
        "label": "enum IDirectory.ContractType",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(ContractInfo)4452_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Directory.ContractInfo)",
        "numberOfBytes": "32",
        "value": "t_struct(ContractInfo)4452_storage"
      },
      "t_mapping(t_uint256,t_struct(ProposalInfo)4470_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Directory.ProposalInfo)",
        "numberOfBytes": "32",
        "value": "t_struct(ProposalInfo)4470_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(ContractInfo)4452_storage": {
        "encoding": "inplace",
        "label": "struct Directory.ContractInfo",
        "members": [
          {
            "astId": 4446,
            "contract": "contracts/Directory.sol:Directory",
            "label": "addr",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 4449,
            "contract": "contracts/Directory.sol:Directory",
            "label": "contractType",
            "offset": 20,
            "slot": "0",
            "type": "t_enum(ContractType)6912"
          },
          {
            "astId": 4451,
            "contract": "contracts/Directory.sol:Directory",
            "label": "description",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(ProposalInfo)4470_storage": {
        "encoding": "inplace",
        "label": "struct Directory.ProposalInfo",
        "members": [
          {
            "astId": 4465,
            "contract": "contracts/Directory.sol:Directory",
            "label": "pool",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 4467,
            "contract": "contracts/Directory.sol:Directory",
            "label": "proposalId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 4469,
            "contract": "contracts/Directory.sol:Directory",
            "label": "description",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}