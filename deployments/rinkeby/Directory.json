{
  "address": "0xAD254Cc867873e863A3FbB717FD4F21F0B7F9D41",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum IDirectory.ContractType",
          "name": "contractType",
          "type": "uint8"
        }
      ],
      "name": "ContractRecordAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "ProposalRecordAdded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "enum IDirectory.ContractType",
          "name": "contractType",
          "type": "uint8"
        }
      ],
      "name": "addContractRecord",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "addProposalRecord",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "contractRecordAt",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "enum IDirectory.ContractType",
          "name": "contractType",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "indexOfContract",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastContractRecordIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastProposalRecordIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposalRecordAt",
      "outputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "typeOf",
      "outputs": [
        {
          "internalType": "enum IDirectory.ContractType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x03cde75938d50fd92c4728ee4d519a6d0723480142a2d8637db89c95a074c12b",
  "receipt": {
    "to": null,
    "from": "0x90A4a90e6FAf88c4d709F666D26793F9e2B47183",
    "contractAddress": "0xAD254Cc867873e863A3FbB717FD4F21F0B7F9D41",
    "transactionIndex": 11,
    "gasUsed": "477094",
    "logsBloom": "0x
    "blockHash": "0xf02d33d32c6574549c0b222cfd6c7df905c04a8bee49a8840b1d7eb5b69b217a",
    "transactionHash": "0x03cde75938d50fd92c4728ee4d519a6d0723480142a2d8637db89c95a074c12b",
    "logs": [
      {
        "transactionIndex": 11,
        "blockNumber": 10889765,
        "transactionHash": "0x03cde75938d50fd92c4728ee4d519a6d0723480142a2d8637db89c95a074c12b",
        "address": "0xAD254Cc867873e863A3FbB717FD4F21F0B7F9D41",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000090a4a90e6faf88c4d709f666d26793f9e2b47183"
        ],
        "data": "0x",
        "logIndex": 10,
        "blockHash": "0xf02d33d32c6574549c0b222cfd6c7df905c04a8bee49a8840b1d7eb5b69b217a"
      }
    ],
    "blockNumber": 10889765,
    "cumulativeGasUsed": "3714243",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "a03c810e63c60b30c3e23840682a3efd",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IDirectory.ContractType\",\"name\":\"contractType\",\"type\":\"uint8\"}],\"name\":\"ContractRecordAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalRecordAdded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum IDirectory.ContractType\",\"name\":\"contractType\",\"type\":\"uint8\"}],\"name\":\"addContractRecord\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"addProposalRecord\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"contractRecordAt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum IDirectory.ContractType\",\"name\":\"contractType\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"indexOfContract\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastContractRecordIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastProposalRecordIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposalRecordAt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"typeOf\",\"outputs\":[{\"internalType\":\"enum IDirectory.ContractType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Directory.sol\":\"Directory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Directory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.13;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./interfaces/IDirectory.sol\\\";\\n\\ncontract Directory is IDirectory, Ownable {\\n    struct ContractInfo {\\n        address addr;\\n        ContractType contractType;\\n    }\\n\\n    mapping(uint256 => ContractInfo) public contractRecordAt;\\n\\n    uint256 public lastContractRecordIndex;\\n\\n    mapping(address => uint256) public indexOfContract;\\n\\n    struct ProposalInfo {\\n        address pool;\\n        uint256 proposalId;\\n    }\\n\\n    mapping(uint256 => ProposalInfo) public proposalRecordAt;\\n\\n    uint256 public lastProposalRecordIndex;\\n\\n    // EVENTS\\n\\n    event ContractRecordAdded(\\n        uint256 index,\\n        address addr,\\n        ContractType contractType\\n    );\\n\\n    event ProposalRecordAdded(uint256 index, address pool, uint256 proposalId);\\n\\n    // PUBLIC FUNCTIONS\\n\\n    function addContractRecord(address addr, ContractType contractType)\\n        external\\n        override\\n        onlyOwner\\n        returns (uint256 index)\\n    {\\n        index = ++lastContractRecordIndex;\\n        contractRecordAt[index] = ContractInfo({\\n            addr: addr,\\n            contractType: contractType\\n        });\\n        indexOfContract[addr] = index;\\n\\n        emit ContractRecordAdded(index, addr, contractType);\\n    }\\n\\n    function addProposalRecord(address pool, uint256 proposalId)\\n        external\\n        override\\n        onlyOwner\\n        returns (uint256 index)\\n    {\\n        index = ++lastProposalRecordIndex;\\n        proposalRecordAt[index] = ProposalInfo({\\n            pool: pool,\\n            proposalId: proposalId\\n        });\\n\\n        emit ProposalRecordAdded(index, pool, proposalId);\\n    }\\n\\n    // PUBLIC VIEW FUNCTIONS\\n\\n    function typeOf(address addr)\\n        external\\n        view\\n        override\\n        returns (ContractType)\\n    {\\n        return contractRecordAt[indexOfContract[addr]].contractType;\\n    }\\n}\\n\",\"keccak256\":\"0x45afe727765ae315e1314bd4a679935fa858d16f9fdf20ec1e8ba81e4c5debf2\",\"license\":\"MIT\"},\"contracts/interfaces/IDirectory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.13;\\n\\ninterface IDirectory {\\n    enum ContractType {\\n        None,\\n        Pool,\\n        GovernanceToken,\\n        TGE\\n    }\\n\\n    function addContractRecord(address addr, ContractType contractType)\\n        external\\n        returns (uint256 index);\\n\\n    function addProposalRecord(address pool, uint256 proposalId)\\n        external\\n        returns (uint256 index);\\n\\n    function typeOf(address addr) external view returns (ContractType);\\n}\\n\",\"keccak256\":\"0x39fc90b444e9aefc4e2a3a40b43840dfa44ff13441a9e50d3de9bb95f044bd81\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6107368061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063867c5ce411610071578063867c5ce4146101545780638da5cb5b1461015d5780638f78131d14610178578063e863325c146101ca578063f2fde38b1461020d578063f4be93691461022057600080fd5b80630c80f364146100ae578063121f661c146100d45780634dcbe29c146100f45780636dcb0cf8146100fd578063715018a61461014a575b600080fd5b6100c16100bc366004610570565b610233565b6040519081526020015b60405180910390f35b6100c16100e23660046105ab565b60036020526000908152604090205481565b6100c160055481565b61013d61010b3660046105ab565b6001600160a01b031660009081526003602090815260408083205483526001909152902054600160a01b900460ff1690565b6040516100cb9190610605565b610152610369565b005b6100c160025481565b6000546040516001600160a01b0390911681526020016100cb565b6101ab610186366004610619565b600460205260009081526040902080546001909101546001600160a01b039091169082565b604080516001600160a01b0390931683526020830191909152016100cb565b6101ff6101d8366004610619565b6001602052600090815260409020546001600160a01b03811690600160a01b900460ff1682565b6040516100cb929190610632565b61015261021b3660046105ab565b61039f565b6100c161022e36600461064f565b61043a565b600080546001600160a01b031633146102675760405162461bcd60e51b815260040161025e90610679565b60405180910390fd5b600260008154610276906106ae565b91905081905590506040518060400160405280846001600160a01b031681526020018360038111156102aa576102aa6105cd565b90526000828152600160209081526040909120825181546001600160a01b039091166001600160a01b031982168117835592840151919283916001600160a81b03191617600160a01b836003811115610305576103056105cd565b021790555050506001600160a01b03831660009081526003602052604090819020829055517f30ae76c641f7b77628da0dd91b34591e5b1dc7422220e5eb1080af2adfa142ef9061035b908390869086906106d5565b60405180910390a192915050565b6000546001600160a01b031633146103935760405162461bcd60e51b815260040161025e90610679565b61039d6000610504565b565b6000546001600160a01b031633146103c95760405162461bcd60e51b815260040161025e90610679565b6001600160a01b03811661042e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161025e565b61043781610504565b50565b600080546001600160a01b031633146104655760405162461bcd60e51b815260040161025e90610679565b600560008154610474906106ae565b91829055506040805180820182526001600160a01b038681168083526020808401888152600087815260048352869020945185546001600160a01b031916941693909317845591516001909301929092558251848152908101919091529081018490529091507f275b6fbf6c9e793a28d01c614ff750fb316acacb6c25f06fdb8ac72d9dbabb089060600161035b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461056b57600080fd5b919050565b6000806040838503121561058357600080fd5b61058c83610554565b91506020830135600481106105a057600080fd5b809150509250929050565b6000602082840312156105bd57600080fd5b6105c682610554565b9392505050565b634e487b7160e01b600052602160045260246000fd5b6004811061060157634e487b7160e01b600052602160045260246000fd5b9052565b6020810161061382846105e3565b92915050565b60006020828403121561062b57600080fd5b5035919050565b6001600160a01b0383168152604081016105c660208301846105e3565b6000806040838503121561066257600080fd5b61066b83610554565b946020939093013593505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000600182016106ce57634e487b7160e01b600052601160045260246000fd5b5060010190565b8381526001600160a01b0383166020820152606081016106f860408301846105e3565b94935050505056fea2646970667358221220de1108d34367b8ae15091ad39b485ada0e5f67e5b689dde889b8de87f7235dff64736f6c634300080d0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c8063867c5ce411610071578063867c5ce4146101545780638da5cb5b1461015d5780638f78131d14610178578063e863325c146101ca578063f2fde38b1461020d578063f4be93691461022057600080fd5b80630c80f364146100ae578063121f661c146100d45780634dcbe29c146100f45780636dcb0cf8146100fd578063715018a61461014a575b600080fd5b6100c16100bc366004610570565b610233565b6040519081526020015b60405180910390f35b6100c16100e23660046105ab565b60036020526000908152604090205481565b6100c160055481565b61013d61010b3660046105ab565b6001600160a01b031660009081526003602090815260408083205483526001909152902054600160a01b900460ff1690565b6040516100cb9190610605565b610152610369565b005b6100c160025481565b6000546040516001600160a01b0390911681526020016100cb565b6101ab610186366004610619565b600460205260009081526040902080546001909101546001600160a01b039091169082565b604080516001600160a01b0390931683526020830191909152016100cb565b6101ff6101d8366004610619565b6001602052600090815260409020546001600160a01b03811690600160a01b900460ff1682565b6040516100cb929190610632565b61015261021b3660046105ab565b61039f565b6100c161022e36600461064f565b61043a565b600080546001600160a01b031633146102675760405162461bcd60e51b815260040161025e90610679565b60405180910390fd5b600260008154610276906106ae565b91905081905590506040518060400160405280846001600160a01b031681526020018360038111156102aa576102aa6105cd565b90526000828152600160209081526040909120825181546001600160a01b039091166001600160a01b031982168117835592840151919283916001600160a81b03191617600160a01b836003811115610305576103056105cd565b021790555050506001600160a01b03831660009081526003602052604090819020829055517f30ae76c641f7b77628da0dd91b34591e5b1dc7422220e5eb1080af2adfa142ef9061035b908390869086906106d5565b60405180910390a192915050565b6000546001600160a01b031633146103935760405162461bcd60e51b815260040161025e90610679565b61039d6000610504565b565b6000546001600160a01b031633146103c95760405162461bcd60e51b815260040161025e90610679565b6001600160a01b03811661042e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161025e565b61043781610504565b50565b600080546001600160a01b031633146104655760405162461bcd60e51b815260040161025e90610679565b600560008154610474906106ae565b91829055506040805180820182526001600160a01b038681168083526020808401888152600087815260048352869020945185546001600160a01b031916941693909317845591516001909301929092558251848152908101919091529081018490529091507f275b6fbf6c9e793a28d01c614ff750fb316acacb6c25f06fdb8ac72d9dbabb089060600161035b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461056b57600080fd5b919050565b6000806040838503121561058357600080fd5b61058c83610554565b91506020830135600481106105a057600080fd5b809150509250929050565b6000602082840312156105bd57600080fd5b6105c682610554565b9392505050565b634e487b7160e01b600052602160045260246000fd5b6004811061060157634e487b7160e01b600052602160045260246000fd5b9052565b6020810161061382846105e3565b92915050565b60006020828403121561062b57600080fd5b5035919050565b6001600160a01b0383168152604081016105c660208301846105e3565b6000806040838503121561066257600080fd5b61066b83610554565b946020939093013593505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000600182016106ce57634e487b7160e01b600052601160045260246000fd5b5060010190565b8381526001600160a01b0383166020820152606081016106f860408301846105e3565b94935050505056fea2646970667358221220de1108d34367b8ae15091ad39b485ada0e5f67e5b689dde889b8de87f7235dff64736f6c634300080d0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3636,
        "contract": "contracts/Directory.sol:Directory",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 4453,
        "contract": "contracts/Directory.sol:Directory",
        "label": "contractRecordAt",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(ContractInfo)4448_storage)"
      },
      {
        "astId": 4455,
        "contract": "contracts/Directory.sol:Directory",
        "label": "lastContractRecordIndex",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 4459,
        "contract": "contracts/Directory.sol:Directory",
        "label": "indexOfContract",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 4469,
        "contract": "contracts/Directory.sol:Directory",
        "label": "proposalRecordAt",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_struct(ProposalInfo)4464_storage)"
      },
      {
        "astId": 4471,
        "contract": "contracts/Directory.sol:Directory",
        "label": "lastProposalRecordIndex",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_enum(ContractType)6455": {
        "encoding": "inplace",
        "label": "enum IDirectory.ContractType",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(ContractInfo)4448_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Directory.ContractInfo)",
        "numberOfBytes": "32",
        "value": "t_struct(ContractInfo)4448_storage"
      },
      "t_mapping(t_uint256,t_struct(ProposalInfo)4464_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Directory.ProposalInfo)",
        "numberOfBytes": "32",
        "value": "t_struct(ProposalInfo)4464_storage"
      },
      "t_struct(ContractInfo)4448_storage": {
        "encoding": "inplace",
        "label": "struct Directory.ContractInfo",
        "members": [
          {
            "astId": 4444,
            "contract": "contracts/Directory.sol:Directory",
            "label": "addr",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 4447,
            "contract": "contracts/Directory.sol:Directory",
            "label": "contractType",
            "offset": 20,
            "slot": "0",
            "type": "t_enum(ContractType)6455"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(ProposalInfo)4464_storage": {
        "encoding": "inplace",
        "label": "struct Directory.ProposalInfo",
        "members": [
          {
            "astId": 4461,
            "contract": "contracts/Directory.sol:Directory",
            "label": "pool",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 4463,
            "contract": "contracts/Directory.sol:Directory",
            "label": "proposalId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}