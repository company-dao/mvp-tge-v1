{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xcD0EDc1C90319bEf259ce714d5C2E37019311543",
      "txHash": "0x8de945d25104486d6f98cde70d3be3064eea3f46ff33d0d2d60d00a5a1b14f5a",
      "kind": "uups"
    },
    {
      "address": "0xB8f4a4AD9a1d23861C650e1dd1F0A96BB7DC6e0d",
      "txHash": "0xb5b283dedf0804e7eab4950a5bdc7211ef2933240a094aa9aa2232d97dd243d5",
      "kind": "uups"
    },
    {
      "address": "0x5E64814FE239823AF0699A8391BE4aeF2F64B3D7",
      "txHash": "0x847426def2dc916f22d076fee5f6ae4e2f7a97ae1097acb45d418b285849fdf8",
      "kind": "uups"
    },
    {
      "address": "0x0c3ac867De28d0b20040cAbA44cB3a17608DeeA1",
      "txHash": "0xedb189b5f56ddd7150fb649a910ec2d8037718ca7c746cd7858bad0f958f66e9",
      "kind": "uups"
    },
    {
      "address": "0xA59e86DC7f87A54b453B49E6077deF40430eA486",
      "txHash": "0x4cdbc6cb684abe4df5c7e0e55d88f35546fdd1673ed669cb6da55387941e9039",
      "kind": "uups"
    },
    {
      "address": "0x1B8a1aCD2fe1a63565CA8C787F5627E4a52A1a11",
      "txHash": "0x8ca7bbc796251f724c2e5b89702c135cbaa0078a10f8f54df818521c1743fe86",
      "kind": "uups"
    }
  ],
  "impls": {
    "afebea19c97d5cb8754e5880f704d6f7b11e069e6a201f7cd983e6958afbdd4f": {
      "address": "0x2089fB223Bfd7B3C523AdC19877826337e16Fce1",
      "txHash": "0x1442bc59c0962b6daf672670e3c40abd49823e6706359533f54444e89c552554",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "service",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "Directory",
            "src": "contracts/Directory.sol:17"
          },
          {
            "label": "contractRecordAt",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_struct(ContractInfo)6058_storage)",
            "contract": "Directory",
            "src": "contracts/Directory.sol:25"
          },
          {
            "label": "lastContractRecordIndex",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "Directory",
            "src": "contracts/Directory.sol:27"
          },
          {
            "label": "indexOfContract",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Directory",
            "src": "contracts/Directory.sol:29"
          },
          {
            "label": "proposalRecordAt",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_uint256,t_struct(ProposalInfo)6076_storage)",
            "contract": "Directory",
            "src": "contracts/Directory.sol:37"
          },
          {
            "label": "lastProposalRecordIndex",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "Directory",
            "src": "contracts/Directory.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_enum(ContractType)10504": {
            "label": "enum IDirectory.ContractType",
            "members": [
              "None",
              "Pool",
              "GovernanceToken",
              "TGE"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ContractInfo)6058_storage)": {
            "label": "mapping(uint256 => struct Directory.ContractInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalInfo)6076_storage)": {
            "label": "mapping(uint256 => struct Directory.ProposalInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ContractInfo)6058_storage": {
            "label": "struct Directory.ContractInfo",
            "members": [
              {
                "label": "addr",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "contractType",
                "type": "t_enum(ContractType)10504",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ProposalInfo)6076_storage": {
            "label": "struct Directory.ProposalInfo",
            "members": [
              {
                "label": "pool",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "proposalId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ed46f6ddc616035a94e5832002505201300ba9cf7d1147a92da6e51b2e309a78": {
      "address": "0xA1836983899910f3c5aeE744Cf6Ff4fc3040FE9f",
      "txHash": "0x50fdddf4e4ea4b7a82faf1244ae87b3f5466e344eb20403924684829ce7f7ded",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5db13ea74e9e20440b094219d4824f568be2b212443370c6c11ce4bc77b59088": {
      "address": "0xe0FCCF51e2304C1619c9A06FC5C3e4002B67184b",
      "txHash": "0xf1f139a3c16e9ec7d9a3960e4d1f94e2315eb5fb35362dc017711332b961e68f",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_tokenWhitelist",
            "offset": 0,
            "slot": "201",
            "type": "t_struct(AddressSet)4749_storage",
            "contract": "WhitelistedTokens",
            "src": "contracts/WhitelistedTokens.sol:36"
          },
          {
            "label": "tokenSwapPath",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_bytes_storage)",
            "contract": "WhitelistedTokens",
            "src": "contracts/WhitelistedTokens.sol:38"
          },
          {
            "label": "tokenSwapReversePath",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_bytes_storage)",
            "contract": "WhitelistedTokens",
            "src": "contracts/WhitelistedTokens.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes_storage)": {
            "label": "mapping(address => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4749_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4448_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)4448_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8989619f6911197f6e2a4274bd8a4fdcf6d1b85fe1f1eb2963f93008b41f07b7": {
      "address": "0x8496217ebD5349acf459b7dB9E96C81693CfE320",
      "txHash": "0xda64b519b31d5172f96627e56a02ab6a908b72a939fc811ce690fee3dce79a4c",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "service",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IService)10881",
            "contract": "Metadata",
            "src": "contracts/Metadata.sol:18"
          },
          {
            "label": "currentId",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "Metadata",
            "src": "contracts/Metadata.sol:20"
          },
          {
            "label": "queueInfo",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_struct(QueueInfo)10627_storage)",
            "contract": "Metadata",
            "src": "contracts/Metadata.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IService)10881": {
            "label": "contract IService",
            "numberOfBytes": "20"
          },
          "t_enum(Status)10609": {
            "label": "enum IMetadata.Status",
            "members": [
              "NotUsed",
              "Used"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_struct(QueueInfo)10627_storage)": {
            "label": "mapping(uint256 => struct IMetadata.QueueInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(QueueInfo)10627_storage": {
            "label": "struct IMetadata.QueueInfo",
            "members": [
              {
                "label": "jurisdiction",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "serialNumber",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "dateOfIncorporation",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "legalAddress",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "taxationStatus",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "registeredName",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "status",
                "type": "t_enum(Status)10609",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 1,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3ee9118dcd03930e9e276afaade517dc05974e714cfe5d7387b4da4db65af5ef": {
      "address": "0xE6ecF6A178369B4f0dd5b02E6B995E7592Ee3281",
      "txHash": "0x9b06a99a41484f8d49ecb292b084301d22908f3e2e876ede35bbce3fa8e4ebef",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "proposals",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_struct(Proposal)10131_storage)",
            "contract": "Governor",
            "src": "contracts/components/Governor.sol:24"
          },
          {
            "label": "lastProposalId",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "Governor",
            "src": "contracts/components/Governor.sol:26"
          },
          {
            "label": "service",
            "offset": 0,
            "slot": "203",
            "type": "t_contract(IService)10926",
            "contract": "Pool",
            "src": "contracts/Pool.sol:23"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(IGovernanceToken)10649",
            "contract": "Pool",
            "src": "contracts/Pool.sol:25"
          },
          {
            "label": "tge",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(ITGE)10985",
            "contract": "Pool",
            "src": "contracts/Pool.sol:27"
          },
          {
            "label": "_ballotQuorumThreshold",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "Pool",
            "src": "contracts/Pool.sol:29"
          },
          {
            "label": "_ballotDecisionThreshold",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "Pool",
            "src": "contracts/Pool.sol:31"
          },
          {
            "label": "_ballotLifespan",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "Pool",
            "src": "contracts/Pool.sol:33"
          },
          {
            "label": "_poolRegisteredName",
            "offset": 0,
            "slot": "209",
            "type": "t_string_storage",
            "contract": "Pool",
            "src": "contracts/Pool.sol:35"
          },
          {
            "label": "_poolTrademark",
            "offset": 0,
            "slot": "210",
            "type": "t_string_storage",
            "contract": "Pool",
            "src": "contracts/Pool.sol:37"
          },
          {
            "label": "_poolJurisdiction",
            "offset": 0,
            "slot": "211",
            "type": "t_uint256",
            "contract": "Pool",
            "src": "contracts/Pool.sol:39"
          },
          {
            "label": "_poolEIN",
            "offset": 0,
            "slot": "212",
            "type": "t_string_storage",
            "contract": "Pool",
            "src": "contracts/Pool.sol:41"
          },
          {
            "label": "_poolMetadataIndex",
            "offset": 0,
            "slot": "213",
            "type": "t_uint256",
            "contract": "Pool",
            "src": "contracts/Pool.sol:43"
          },
          {
            "label": "_poolDateOfIncorporation",
            "offset": 0,
            "slot": "214",
            "type": "t_string_storage",
            "contract": "Pool",
            "src": "contracts/Pool.sol:45"
          },
          {
            "label": "_poolLegalAddress",
            "offset": 0,
            "slot": "215",
            "type": "t_string_storage",
            "contract": "Pool",
            "src": "contracts/Pool.sol:47"
          },
          {
            "label": "_poolTaxationStatus",
            "offset": 0,
            "slot": "216",
            "type": "t_string_storage",
            "contract": "Pool",
            "src": "contracts/Pool.sol:49"
          },
          {
            "label": "primaryTGE",
            "offset": 0,
            "slot": "217",
            "type": "t_address",
            "contract": "Pool",
            "src": "contracts/Pool.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IGovernanceToken)10649": {
            "label": "contract IGovernanceToken",
            "numberOfBytes": "20"
          },
          "t_contract(IService)10926": {
            "label": "contract IService",
            "numberOfBytes": "20"
          },
          "t_contract(ITGE)10985": {
            "label": "contract ITGE",
            "numberOfBytes": "20"
          },
          "t_enum(ProposalExecutionState)10147": {
            "label": "enum Governor.ProposalExecutionState",
            "members": [
              "Rejected",
              "Accomplished"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_struct(Proposal)10131_storage)": {
            "label": "mapping(uint256 => struct Governor.Proposal)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Proposal)10131_storage": {
            "label": "struct Governor.Proposal",
            "members": [
              {
                "label": "ballotQuorumThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "ballotDecisionThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "targets",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "calldatas",
                "type": "t_array(t_bytes_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "startBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "endBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "forVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "againstVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "accepted",
                "type": "t_bool",
                "offset": 1,
                "slot": "9"
              },
              {
                "label": "state",
                "type": "t_enum(ProposalExecutionState)10147",
                "offset": 2,
                "slot": "9"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c6af9a011838cfbdd6f5861e599e42d7d2b4e10cbbf180529265c1df6fd73b8e": {
      "address": "0xF6330d356cB31B56F28e532E8e9440d9c6cF8714",
      "txHash": "0xc6291e8bdb98b62bc1e5eff0eaa355d361ff3e485ff529c6682ff167fc14fe1b",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "204",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "205",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "251",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "252",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_address,t_struct(Counter)3068_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "304",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "_delegates",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:42"
          },
          {
            "label": "_checkpoints",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)1676_storage)dyn_storage)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:43"
          },
          {
            "label": "_totalSupplyCheckpoints",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_struct(Checkpoint)1676_storage)dyn_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "357",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:261"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "404",
            "type": "t_uint256",
            "contract": "ERC20CappedUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "405",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20CappedUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:50"
          },
          {
            "label": "service",
            "offset": 0,
            "slot": "455",
            "type": "t_contract(IService)10926",
            "contract": "GovernanceToken",
            "src": "contracts/GovernanceToken.sol:23"
          },
          {
            "label": "pool",
            "offset": 0,
            "slot": "456",
            "type": "t_address",
            "contract": "GovernanceToken",
            "src": "contracts/GovernanceToken.sol:25"
          },
          {
            "label": "_locked",
            "offset": 0,
            "slot": "457",
            "type": "t_mapping(t_address,t_struct(LockedBalance)6353_storage)",
            "contract": "GovernanceToken",
            "src": "contracts/GovernanceToken.sol:34"
          },
          {
            "label": "_lockedInProposal",
            "offset": 0,
            "slot": "458",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LockedBalance)6353_storage))",
            "contract": "GovernanceToken",
            "src": "contracts/GovernanceToken.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint)1676_storage)dyn_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IService)10926": {
            "label": "contract IService",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)1676_storage)dyn_storage)": {
            "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(LockedBalance)6353_storage))": {
            "label": "mapping(address => mapping(uint256 => struct GovernanceToken.LockedBalance))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)3068_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(LockedBalance)6353_storage)": {
            "label": "mapping(address => struct GovernanceToken.LockedBalance)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LockedBalance)6353_storage)": {
            "label": "mapping(uint256 => struct GovernanceToken.LockedBalance)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)1676_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "votes",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3068_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LockedBalance)6353_storage": {
            "label": "struct GovernanceToken.LockedBalance",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "deadline",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "dd882833d2c4f927769c107e7da05612915c98f054f32f04f39d399d6ae8d7c5": {
      "address": "0x6B6668bA570b985401f5eCAB67C2045270518c78",
      "txHash": "0xcfde32e39eeec58c613c29c1473e948be5335e4158922b5ab3d5d6f24f1ff315",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IGovernanceToken)10649",
            "contract": "TGE",
            "src": "contracts/TGE.sol:20"
          },
          {
            "label": "metadataURI",
            "offset": 0,
            "slot": "202",
            "type": "t_string_storage",
            "contract": "TGE",
            "src": "contracts/TGE.sol:22"
          },
          {
            "label": "price",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "TGE",
            "src": "contracts/TGE.sol:24"
          },
          {
            "label": "hardcap",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "TGE",
            "src": "contracts/TGE.sol:26"
          },
          {
            "label": "softcap",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "TGE",
            "src": "contracts/TGE.sol:28"
          },
          {
            "label": "minPurchase",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "TGE",
            "src": "contracts/TGE.sol:30"
          },
          {
            "label": "maxPurchase",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "TGE",
            "src": "contracts/TGE.sol:32"
          },
          {
            "label": "lockupPercent",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "TGE",
            "src": "contracts/TGE.sol:34"
          },
          {
            "label": "lockupTVL",
            "offset": 0,
            "slot": "209",
            "type": "t_uint256",
            "contract": "TGE",
            "src": "contracts/TGE.sol:36"
          },
          {
            "label": "lockupDuration",
            "offset": 0,
            "slot": "210",
            "type": "t_uint256",
            "contract": "TGE",
            "src": "contracts/TGE.sol:38"
          },
          {
            "label": "duration",
            "offset": 0,
            "slot": "211",
            "type": "t_uint256",
            "contract": "TGE",
            "src": "contracts/TGE.sol:40"
          },
          {
            "label": "userWhitelist",
            "offset": 0,
            "slot": "212",
            "type": "t_array(t_address)dyn_storage",
            "contract": "TGE",
            "src": "contracts/TGE.sol:42"
          },
          {
            "label": "_unitOfAccount",
            "offset": 0,
            "slot": "213",
            "type": "t_address",
            "contract": "TGE",
            "src": "contracts/TGE.sol:44"
          },
          {
            "label": "isUserWhitelisted",
            "offset": 0,
            "slot": "214",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TGE",
            "src": "contracts/TGE.sol:46"
          },
          {
            "label": "isTokenWhitelisted",
            "offset": 0,
            "slot": "215",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TGE",
            "src": "contracts/TGE.sol:48"
          },
          {
            "label": "createdAt",
            "offset": 0,
            "slot": "216",
            "type": "t_uint256",
            "contract": "TGE",
            "src": "contracts/TGE.sol:50"
          },
          {
            "label": "purchaseOf",
            "offset": 0,
            "slot": "217",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TGE",
            "src": "contracts/TGE.sol:52"
          },
          {
            "label": "lockupTVLReached",
            "offset": 0,
            "slot": "218",
            "type": "t_bool",
            "contract": "TGE",
            "src": "contracts/TGE.sol:54"
          },
          {
            "label": "lockedBalanceOf",
            "offset": 0,
            "slot": "219",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TGE",
            "src": "contracts/TGE.sol:56"
          },
          {
            "label": "_totalPurchased",
            "offset": 0,
            "slot": "220",
            "type": "t_uint256",
            "contract": "TGE",
            "src": "contracts/TGE.sol:58"
          },
          {
            "label": "_totalLocked",
            "offset": 0,
            "slot": "221",
            "type": "t_uint256",
            "contract": "TGE",
            "src": "contracts/TGE.sol:60"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IGovernanceToken)10649": {
            "label": "contract IGovernanceToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c058cc9cfc18c590689684b97db36c64385c46647525f032d541d2813867bc1b": {
      "address": "0x323Fc6E18d2B9aAe1054AFaD8A46e25031dF2598",
      "txHash": "0x18aec235816186823d9cea8c636e8454c01d957261bb50408deb2ab58798641b",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "metadata",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IMetadata)10662",
            "contract": "Service",
            "src": "contracts/Service.sol:32"
          },
          {
            "label": "directory",
            "offset": 0,
            "slot": "202",
            "type": "t_contract(IDirectory)10532",
            "contract": "Service",
            "src": "contracts/Service.sol:36"
          },
          {
            "label": "whitelistedTokens",
            "offset": 0,
            "slot": "203",
            "type": "t_contract(IWhitelistedTokens)10970",
            "contract": "Service",
            "src": "contracts/Service.sol:38"
          },
          {
            "label": "proposalGateway",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "Service",
            "src": "contracts/Service.sol:40"
          },
          {
            "label": "poolBeacon",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "Service",
            "src": "contracts/Service.sol:42"
          },
          {
            "label": "tokenBeacon",
            "offset": 0,
            "slot": "206",
            "type": "t_address",
            "contract": "Service",
            "src": "contracts/Service.sol:44"
          },
          {
            "label": "tgeBeacon",
            "offset": 0,
            "slot": "207",
            "type": "t_address",
            "contract": "Service",
            "src": "contracts/Service.sol:46"
          },
          {
            "label": "fee",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "Service",
            "src": "contracts/Service.sol:48"
          },
          {
            "label": "proposalQuorum",
            "offset": 0,
            "slot": "209",
            "type": "t_uint256",
            "contract": "Service",
            "src": "contracts/Service.sol:50"
          },
          {
            "label": "proposalThreshold",
            "offset": 0,
            "slot": "210",
            "type": "t_uint256",
            "contract": "Service",
            "src": "contracts/Service.sol:52"
          },
          {
            "label": "_ballotQuorumThreshold",
            "offset": 0,
            "slot": "211",
            "type": "t_uint256",
            "contract": "Service",
            "src": "contracts/Service.sol:54"
          },
          {
            "label": "_ballotDecisionThreshold",
            "offset": 0,
            "slot": "212",
            "type": "t_uint256",
            "contract": "Service",
            "src": "contracts/Service.sol:56"
          },
          {
            "label": "_ballotLifespan",
            "offset": 0,
            "slot": "213",
            "type": "t_uint256",
            "contract": "Service",
            "src": "contracts/Service.sol:58"
          },
          {
            "label": "uniswapRouter",
            "offset": 0,
            "slot": "214",
            "type": "t_contract(ISwapRouter)6034",
            "contract": "Service",
            "src": "contracts/Service.sol:60"
          },
          {
            "label": "uniswapQuoter",
            "offset": 0,
            "slot": "215",
            "type": "t_contract(IQuoter)5934",
            "contract": "Service",
            "src": "contracts/Service.sol:62"
          },
          {
            "label": "_userWhitelist",
            "offset": 0,
            "slot": "216",
            "type": "t_struct(AddressSet)4749_storage",
            "contract": "Service",
            "src": "contracts/Service.sol:66"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IDirectory)10532": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_contract(IMetadata)10662": {
            "label": "contract IMetadata",
            "numberOfBytes": "20"
          },
          "t_contract(IQuoter)5934": {
            "label": "contract IQuoter",
            "numberOfBytes": "20"
          },
          "t_contract(ISwapRouter)6034": {
            "label": "contract ISwapRouter",
            "numberOfBytes": "20"
          },
          "t_contract(IWhitelistedTokens)10970": {
            "label": "contract IWhitelistedTokens",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4749_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4448_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)4448_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "cd3760fbc48582cc1751e1846b474a3ece6363161a80629f858b2b826fa16b57": {
      "address": "0xea451211bdB759F7BB07b001C86D5924d7080D8d",
      "txHash": "0x3ccbd4aa576474d66084df398843d7f49ebd8eb70c8b2c18400970dfefbef644",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "proposals",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_struct(Proposal)10086_storage)",
            "contract": "Governor",
            "src": "contracts/components/Governor.sol:24"
          },
          {
            "label": "lastProposalId",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "Governor",
            "src": "contracts/components/Governor.sol:26"
          },
          {
            "label": "service",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(IService)10881",
            "contract": "Pool",
            "src": "contracts/Pool.sol:16"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IGovernanceToken)10604",
            "contract": "Pool",
            "src": "contracts/Pool.sol:18"
          },
          {
            "label": "tge",
            "offset": 0,
            "slot": "105",
            "type": "t_contract(ITGE)10940",
            "contract": "Pool",
            "src": "contracts/Pool.sol:20"
          },
          {
            "label": "_ballotQuorumThreshold",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "Pool",
            "src": "contracts/Pool.sol:22"
          },
          {
            "label": "_ballotDecisionThreshold",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "Pool",
            "src": "contracts/Pool.sol:24"
          },
          {
            "label": "_ballotLifespan",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "Pool",
            "src": "contracts/Pool.sol:26"
          },
          {
            "label": "_poolRegisteredName",
            "offset": 0,
            "slot": "109",
            "type": "t_string_storage",
            "contract": "Pool",
            "src": "contracts/Pool.sol:28"
          },
          {
            "label": "_poolTrademark",
            "offset": 0,
            "slot": "110",
            "type": "t_string_storage",
            "contract": "Pool",
            "src": "contracts/Pool.sol:30"
          },
          {
            "label": "_poolJurisdiction",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "Pool",
            "src": "contracts/Pool.sol:32"
          },
          {
            "label": "_poolEIN",
            "offset": 0,
            "slot": "112",
            "type": "t_string_storage",
            "contract": "Pool",
            "src": "contracts/Pool.sol:34"
          },
          {
            "label": "_poolMetadataIndex",
            "offset": 0,
            "slot": "113",
            "type": "t_uint256",
            "contract": "Pool",
            "src": "contracts/Pool.sol:36"
          },
          {
            "label": "_poolDateOfIncorporation",
            "offset": 0,
            "slot": "114",
            "type": "t_string_storage",
            "contract": "Pool",
            "src": "contracts/Pool.sol:38"
          },
          {
            "label": "_poolLegalAddress",
            "offset": 0,
            "slot": "115",
            "type": "t_string_storage",
            "contract": "Pool",
            "src": "contracts/Pool.sol:40"
          },
          {
            "label": "_poolTaxationStatus",
            "offset": 0,
            "slot": "116",
            "type": "t_string_storage",
            "contract": "Pool",
            "src": "contracts/Pool.sol:42"
          },
          {
            "label": "primaryTGE",
            "offset": 0,
            "slot": "117",
            "type": "t_address",
            "contract": "Pool",
            "src": "contracts/Pool.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IGovernanceToken)10604": {
            "label": "contract IGovernanceToken",
            "numberOfBytes": "20"
          },
          "t_contract(IService)10881": {
            "label": "contract IService",
            "numberOfBytes": "20"
          },
          "t_contract(ITGE)10940": {
            "label": "contract ITGE",
            "numberOfBytes": "20"
          },
          "t_enum(ProposalExecutionState)10102": {
            "label": "enum Governor.ProposalExecutionState",
            "members": [
              "Rejected",
              "Accomplished"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_struct(Proposal)10086_storage)": {
            "label": "mapping(uint256 => struct Governor.Proposal)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Proposal)10086_storage": {
            "label": "struct Governor.Proposal",
            "members": [
              {
                "label": "ballotQuorumThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "ballotDecisionThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "targets",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "calldatas",
                "type": "t_array(t_bytes_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "startBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "endBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "forVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "againstVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "accepted",
                "type": "t_bool",
                "offset": 1,
                "slot": "9"
              },
              {
                "label": "state",
                "type": "t_enum(ProposalExecutionState)10102",
                "offset": 2,
                "slot": "9"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7f4bcc4222f8a74a96807c891eed1e78ecb5270b02e7691eecd20749ab0648c7": {
      "address": "0xeC0f08ff02Fd715b142dE3f385995aa4C275BD5c",
      "txHash": "0xed24bba5fa514161d7931aa0d5adc34020b5fd21b9e2592c413646a2c6cd318f",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "151",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "152",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_struct(Counter)3068_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "204",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "_delegates",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:42"
          },
          {
            "label": "_checkpoints",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)1676_storage)dyn_storage)",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:43"
          },
          {
            "label": "_totalSupplyCheckpoints",
            "offset": 0,
            "slot": "256",
            "type": "t_array(t_struct(Checkpoint)1676_storage)dyn_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "257",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC20VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:261"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "304",
            "type": "t_uint256",
            "contract": "ERC20CappedUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20CappedUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:50"
          },
          {
            "label": "service",
            "offset": 0,
            "slot": "355",
            "type": "t_contract(IService)10881",
            "contract": "GovernanceToken",
            "src": "contracts/GovernanceToken.sol:21"
          },
          {
            "label": "pool",
            "offset": 0,
            "slot": "356",
            "type": "t_address",
            "contract": "GovernanceToken",
            "src": "contracts/GovernanceToken.sol:23"
          },
          {
            "label": "_locked",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_address,t_struct(LockedBalance)6350_storage)",
            "contract": "GovernanceToken",
            "src": "contracts/GovernanceToken.sol:32"
          },
          {
            "label": "_lockedInProposal",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LockedBalance)6350_storage))",
            "contract": "GovernanceToken",
            "src": "contracts/GovernanceToken.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint)1676_storage)dyn_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IService)10881": {
            "label": "contract IService",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)1676_storage)dyn_storage)": {
            "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(LockedBalance)6350_storage))": {
            "label": "mapping(address => mapping(uint256 => struct GovernanceToken.LockedBalance))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)3068_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(LockedBalance)6350_storage)": {
            "label": "mapping(address => struct GovernanceToken.LockedBalance)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LockedBalance)6350_storage)": {
            "label": "mapping(uint256 => struct GovernanceToken.LockedBalance)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)1676_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "votes",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3068_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LockedBalance)6350_storage": {
            "label": "struct GovernanceToken.LockedBalance",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "deadline",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "64125a14a6475ea7c6ebc56e427a8554d4214e8397183eb852de00a0ef2c16f6": {
      "address": "0xa26e67a26d91A8A4864d7E00B69eA50857135B15",
      "txHash": "0xb632295ddc03bb27b7876da920e1a0759e7ed0c71e195ba398780a08e68d473e",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IGovernanceToken)10604",
            "contract": "TGE",
            "src": "contracts/TGE.sol:19"
          },
          {
            "label": "metadataURI",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "TGE",
            "src": "contracts/TGE.sol:21"
          },
          {
            "label": "price",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "TGE",
            "src": "contracts/TGE.sol:23"
          },
          {
            "label": "hardcap",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "TGE",
            "src": "contracts/TGE.sol:25"
          },
          {
            "label": "softcap",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "TGE",
            "src": "contracts/TGE.sol:27"
          },
          {
            "label": "minPurchase",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "TGE",
            "src": "contracts/TGE.sol:29"
          },
          {
            "label": "maxPurchase",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "TGE",
            "src": "contracts/TGE.sol:31"
          },
          {
            "label": "lockupPercent",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "TGE",
            "src": "contracts/TGE.sol:33"
          },
          {
            "label": "lockupTVL",
            "offset": 0,
            "slot": "109",
            "type": "t_uint256",
            "contract": "TGE",
            "src": "contracts/TGE.sol:35"
          },
          {
            "label": "lockupDuration",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "TGE",
            "src": "contracts/TGE.sol:37"
          },
          {
            "label": "duration",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "TGE",
            "src": "contracts/TGE.sol:39"
          },
          {
            "label": "userWhitelist",
            "offset": 0,
            "slot": "112",
            "type": "t_array(t_address)dyn_storage",
            "contract": "TGE",
            "src": "contracts/TGE.sol:41"
          },
          {
            "label": "_unitOfAccount",
            "offset": 0,
            "slot": "113",
            "type": "t_address",
            "contract": "TGE",
            "src": "contracts/TGE.sol:43"
          },
          {
            "label": "isUserWhitelisted",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TGE",
            "src": "contracts/TGE.sol:45"
          },
          {
            "label": "isTokenWhitelisted",
            "offset": 0,
            "slot": "115",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TGE",
            "src": "contracts/TGE.sol:47"
          },
          {
            "label": "createdAt",
            "offset": 0,
            "slot": "116",
            "type": "t_uint256",
            "contract": "TGE",
            "src": "contracts/TGE.sol:49"
          },
          {
            "label": "purchaseOf",
            "offset": 0,
            "slot": "117",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TGE",
            "src": "contracts/TGE.sol:51"
          },
          {
            "label": "lockupTVLReached",
            "offset": 0,
            "slot": "118",
            "type": "t_bool",
            "contract": "TGE",
            "src": "contracts/TGE.sol:53"
          },
          {
            "label": "lockedBalanceOf",
            "offset": 0,
            "slot": "119",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TGE",
            "src": "contracts/TGE.sol:55"
          },
          {
            "label": "_totalPurchased",
            "offset": 0,
            "slot": "120",
            "type": "t_uint256",
            "contract": "TGE",
            "src": "contracts/TGE.sol:57"
          },
          {
            "label": "_totalLocked",
            "offset": 0,
            "slot": "121",
            "type": "t_uint256",
            "contract": "TGE",
            "src": "contracts/TGE.sol:59"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IGovernanceToken)10604": {
            "label": "contract IGovernanceToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
